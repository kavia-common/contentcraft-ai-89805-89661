{"is_source_file": true, "format": "Python", "description": "This is a FastAPI router module providing API endpoints for managing blog posts, including create, read, update, patch, list, and delete operations. It defines route handlers, data transformations, and interacts with database models and schemas.", "external_files": ["../db/base", "../db/models/blog", "../db/models/user", "../core/deps", "../schemas/blogs"], "external_methods": ["get_db", "get_current_user"], "published": ["create_blog", "list_blogs", "get_blog", "update_blog", "patch_blog", "delete_blog"], "classes": [], "methods": [{"name": "BlogOut _to_out(b: Blog)", "description": "Converts a Blog ORM model instance to a BlogOut schema object for API response.", "scope": "", "scopeKind": ""}, {"name": "create_blog(payload: BlogCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "delete_blog(blog_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "get_blog(blog_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "list_blogs( db: Session = Depends(get_db), current_user: User = Depends(get_current_user), skip: int = Query(0, ge=0, description=\"Number of items to skip\"), limit: int = Query(20, ge=1, le=100, description=\"Max items to return\"), status_filter: Optional[str] = Query(default=None, description=\"Filter by status\"), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "patch_blog(blog_id: int, payload: BlogUpdate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "update_blog(blog_id: int, payload: BlogCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["db.add", "db.commit", "db.refresh", "db.query", "db.query().filter", "db.query().filter().first", "db.query().filter().count", "db.query().filter().order_by().offset().limit().all", "db.delete"], "search-terms": ["FastAPI blog router", "create, read, update, delete blog", "blog management API", "Blog ORM model", "Blog schemas", "session dependency", "user dependency"], "state": 2, "file_id": 17, "knowledge_revision": 38, "git_revision": "", "ctags": [{"_type": "tag", "name": "_to_out", "path": "/home/kavia/workspace/code-generation/contentcraft-ai-89805-89661/backend/src/api/routers/blogs.py", "pattern": "/^def _to_out(b: Blog) -> BlogOut:$/", "language": "Python", "typeref": "typename:BlogOut", "kind": "function", "signature": "(b: Blog)"}, {"_type": "tag", "name": "create_blog", "path": "/home/kavia/workspace/code-generation/contentcraft-ai-89805-89661/backend/src/api/routers/blogs.py", "pattern": "/^def create_blog(payload: BlogCreate, db: Session = Depends(get_db), current_user: User = Depends/", "language": "Python", "kind": "function", "signature": "(payload: BlogCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "delete_blog", "path": "/home/kavia/workspace/code-generation/contentcraft-ai-89805-89661/backend/src/api/routers/blogs.py", "pattern": "/^def delete_blog(blog_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_cu/", "language": "Python", "kind": "function", "signature": "(blog_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "get_blog", "path": "/home/kavia/workspace/code-generation/contentcraft-ai-89805-89661/backend/src/api/routers/blogs.py", "pattern": "/^def get_blog(blog_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_curre/", "language": "Python", "kind": "function", "signature": "(blog_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "list_blogs", "path": "/home/kavia/workspace/code-generation/contentcraft-ai-89805-89661/backend/src/api/routers/blogs.py", "pattern": "/^def list_blogs($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), current_user: User = Depends(get_current_user), skip: int = Query(0, ge=0, description=\"Number of items to skip\"), limit: int = Query(20, ge=1, le=100, description=\"Max items to return\"), status_filter: Optional[str] = Query(default=None, description=\"Filter by status\"), )"}, {"_type": "tag", "name": "patch_blog", "path": "/home/kavia/workspace/code-generation/contentcraft-ai-89805-89661/backend/src/api/routers/blogs.py", "pattern": "/^def patch_blog(blog_id: int, payload: BlogUpdate, db: Session = Depends(get_db), current_user: U/", "language": "Python", "kind": "function", "signature": "(blog_id: int, payload: BlogUpdate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/contentcraft-ai-89805-89661/backend/src/api/routers/blogs.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_blog", "path": "/home/kavia/workspace/code-generation/contentcraft-ai-89805-89661/backend/src/api/routers/blogs.py", "pattern": "/^def update_blog(blog_id: int, payload: BlogCreate, db: Session = Depends(get_db), current_user: /", "language": "Python", "kind": "function", "signature": "(blog_id: int, payload: BlogCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}], "hash": "aa96596d4e6f13ba0329e3940f89b4ad", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/routers/blogs.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"38": ""}]}